[user]
	email = fabou.ruis@gmail.com
	name = Fabien Ruis
[color]
	branch = auto
	diff = auto
	status = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[alias]
	st = statu
    cim = commit -v -m
    acim = ! git add --all && git commit -v -m
	lg = log --graph --pretty=tformat:'%Cred%h%Creset -%C(cyan)%d %Creset%s %Cgreen(%an %cr)%Creset' --abbrev-commit --date=relative
    lga = log --graph --pretty=tformat:'%Cred%h%Creset -%C(cyan)%d %Creset%s %Cgreen(%an %cr)%Creset' --abbrev-commit --date=relative --all
    logfull = log --pretty=fuller --graph --stat -p
	oops = commit --amend --no-edit -n
    co = checkout
    ca = commit -am
    fab = commit -am '--'
    bra = branch -v -a
    di = diff
    sdi = diff --cached
    pr = pull --rebase
    cat = cat-file -p
    unstage = reset HEAD  
    uncommit = update-ref HEAD HEAD^
    uncommithard = reset --hard HEAD^
    tagg = ! git fetch origin -t && git tag -f -a -m 'created tag : `cat VERSION`' `cat VERSION` && git push origin --tags
    tagc = ! TAG=`git describe --tags $(git rev-list --tags --max-count=1) | sed 's/v//' | awk -F . '{ printf "v%d.%d.%d", $1, $2, $3 + 1 }'` && echo $TAG > VERSION && git ci -m "Bumped to version : $TAG" VERSION && git tag -a -m "Created tag $TAG" $TAG  && git push &&  git push --tags
    rebc = rebase --continue
    rebt = rebase --abort
    rebs = rebase --skip
    rebom = rebase origin/master
    rebod = ! git fap && git rebase origin/develop
    fap = fetch --all --prune
    last = log -1 HEAD
    stnfm = ! git -c core.fileMode=false st
[core]
	pager = cat
	editor = code -w
	whitespace = -trailing-space
	excludesfile = /Users/fabien/.gitignore
[diff]
	mnemonicPrefix = true
	renames = true
	wordRegex = .
	submodule = log
	tool = p4merge
[fetch]
	recurseSubmodules = on-demand
[grep]
	extendedRegexp = true
[log]
	abbrevCommit = true
[merge]
	conflictStyle = diff3
	tool = p4mergetool
[mergetool]
	keepBackup = false
	keepTemporaries = false
	prompt = false
[pull]
	# This is GREATâ€¦ when you know what you're doing and are careful
	# not to pull --no-rebase over a local line containing a true merge.
	# rebase = true
	# WARNING! This option, which does away with the one gotcha of
	# auto-rebasing on pulls, is only available from 1.8.5 onwards.
	rebase = preserve
[push]
	default = upstream
[rerere]
	# If, like me, you like rerere, decomment these
	# autoupdate = true
	enabled = true
[status]
	submoduleSummary = true
	showUntrackedFiles = all
[tag]
	sort = version:refname
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[mergetool "p4mergetool"]
	cmd = /Applications/p4merge.app/Contents/Resources/launchp4merge $PWD/$BASE $PWD/$REMOTE $PWD/$LOCAL $PWD/$MERGED
	trustExitCode = false